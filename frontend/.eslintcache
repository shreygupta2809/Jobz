[{"/home/shrey2809/MERN/frontend/src/index.js":"1","/home/shrey2809/MERN/frontend/src/app/App.js":"2","/home/shrey2809/MERN/frontend/src/app/store.js":"3","/home/shrey2809/MERN/frontend/src/components/Main.js":"4","/home/shrey2809/MERN/frontend/src/components/Home.js":"5","/home/shrey2809/MERN/frontend/src/app/rootReducer.js":"6","/home/shrey2809/MERN/frontend/src/components/Login.js":"7","/home/shrey2809/MERN/frontend/src/components/Register.js":"8","/home/shrey2809/MERN/frontend/src/components/Navbar.js":"9","/home/shrey2809/MERN/frontend/src/components/LoginSlice.js":"10","/home/shrey2809/MERN/frontend/src/utils/apiCalls.js":"11","/home/shrey2809/MERN/frontend/src/components/MyAlert.js":"12","/home/shrey2809/MERN/frontend/src/components/Dashboard.js":"13","/home/shrey2809/MERN/frontend/src/components/Profile.js":"14"},{"size":211,"mtime":1610629717377,"results":"15","hashOfConfig":"16"},{"size":1434,"mtime":1610797235063,"results":"17","hashOfConfig":"16"},{"size":307,"mtime":1610727530836,"results":"18","hashOfConfig":"16"},{"size":152,"mtime":1610630234019,"results":"19","hashOfConfig":"16"},{"size":162,"mtime":1610630228151,"results":"20","hashOfConfig":"16"},{"size":189,"mtime":1610727511093,"results":"21","hashOfConfig":"16"},{"size":4827,"mtime":1610730479785,"results":"22","hashOfConfig":"16"},{"size":13195,"mtime":1610797187210,"results":"23","hashOfConfig":"16"},{"size":7350,"mtime":1610797736639,"results":"24","hashOfConfig":"16"},{"size":1263,"mtime":1610801229690,"results":"25","hashOfConfig":"16"},{"size":653,"mtime":1610814811721,"results":"26","hashOfConfig":"16"},{"size":651,"mtime":1610730012384,"results":"27","hashOfConfig":"16"},{"size":10082,"mtime":1610819672527,"results":"28","hashOfConfig":"16"},{"size":12685,"mtime":1610801975502,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"6tyclk",{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"32"},"/home/shrey2809/MERN/frontend/src/index.js",[],["68","69"],"/home/shrey2809/MERN/frontend/src/app/App.js",["70","71","72","73","74"],"import { Provider as StoreProvider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Profile from '../components/Profile';\nimport Navbar from '../components/Navbar';\nimport Login from '../components/Login';\nimport Register from '../components/Register';\nimport Dashboard from '../components/Dashboard';\n\nimport './App.css';\n\nimport store from './store';\n\nfunction App() {\n    return (\n        <StoreProvider store={store}>\n            <Router>\n                <Navbar>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            exact\n                            component={() => <Redirect to=\"/login\"></Redirect>}\n                        />\n                        <Route exact path=\"/dashboard\" exact component={Dashboard} />\n                        <Route exact path=\"/login\" exact component={Login} />\n                        <Route exact path=\"/register\" exact component={Register} />\n                        <Route exact path=\"/profile\" exact component={Profile} />\n                        {/* <Route exact path=\"/login\" exact component={Login} />\n                        <Route exact path=\"/navbar\" exact component={Navbar} /> */}\n                    </Switch>\n                </Navbar>\n            </Router>\n        </StoreProvider>\n    );\n}\n\nexport default App;\n","/home/shrey2809/MERN/frontend/src/app/store.js",["75"],"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import loginReducer from '../components/LoginSlice';\n\nimport rootReducer from './rootReducer';\nconst store = configureStore({\n    reducer: rootReducer,\n    devTools: process.env.NODE_ENV !== 'production'\n});\n\nexport default store;\n","/home/shrey2809/MERN/frontend/src/components/Main.js",[],["76","77"],"/home/shrey2809/MERN/frontend/src/components/Home.js",[],"/home/shrey2809/MERN/frontend/src/app/rootReducer.js",[],"/home/shrey2809/MERN/frontend/src/components/Login.js",["78","79"],"import { React, useState } from 'react';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { login } from './LoginSlice';\nimport { signin, signout, signerror } from './LoginSlice';\nimport api from '../utils/apiCalls';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport MyAlert from './MyAlert';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}));\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const login = async (email, password) => {\n        try {\n            const response = await api.post('/api/users/login', {\n                body: { email, password }\n            });\n            const result = response.data;\n            dispatch(signin({ token: result.token, role: result.role }));\n        } catch (err) {\n            const message = err.response.data.errors[0].msg;\n            dispatch(signout());\n            dispatch(signerror({ message }));\n            console.error(err);\n        }\n    };\n\n    const classes = useStyles();\n\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n\n    const loggedIn = useSelector(state => state.login.isAuthenticated);\n\n    const role = useSelector(state => state.login.role);\n    const error = useSelector(state => state.login.error);\n\n    if (loggedIn) return <Redirect to=\"/dashboard\" />;\n\n    const onChange = e => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const onSubmit = e => {\n        e.preventDefault();\n        login(formData.email, formData.password);\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            {error && <MyAlert />}\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Log in\n                </Typography>\n                <form onSubmit={onSubmit} className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        value={formData.email}\n                        autoComplete=\"email\"\n                        onChange={onChange}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        value={formData.password}\n                        onChange={onChange}\n                        autoComplete=\"current-password\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Log In\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link to=\"/register\" variant=\"body2\">\n                                {\"Don't have an account? Register Now\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            {/* {loggedIn && <Redirect to=\"/dashboard\"></Redirect>} */}\n        </Container>\n    );\n};\n\nexport default Login;\n","/home/shrey2809/MERN/frontend/src/components/Register.js",["80"],"import { React, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signin, signout, signerror } from './LoginSlice';\nimport api from '../utils/apiCalls';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport IconButton from '@material-ui/core/IconButton';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MyAlert from './MyAlert';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '100%'\n        }\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: '100%'\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}));\n\nconst Register = () => {\n    const dispatch = useDispatch();\n    const register = async formData => {\n        try {\n            const response = await api.post('/api/users/signup', {\n                body: formData\n            });\n            const result = response.data;\n            dispatch(signin({ token: result.token, role: result.role }));\n        } catch (err) {\n            const message = err.response.data.errors[0].msg;\n            dispatch(signout());\n            dispatch(signerror({ message }));\n            console.error(err);\n        }\n    };\n\n    const classes = useStyles();\n\n    const [formData, setFormData] = useState({\n        role: '',\n        email: '',\n        password: '',\n        name: '',\n        bio: '',\n        education: [],\n        skill: [],\n        contact: ''\n    });\n\n    const [edu, setEdu] = useState([{ institute: '', startYear: '', endYear: '' }]);\n    const [skill, setSkill] = useState(['']);\n\n    const loggedIn = useSelector(state => state.login.isAuthenticated);\n\n    const role = useSelector(state => state.login.role);\n    const error = useSelector(state => state.login.error);\n\n    if (loggedIn) return <Redirect to=\"/dashboard\" />;\n\n    const onChange = e => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const addEduField = () => {\n        setEdu([...edu, { institute: '', startYear: '', endYear: '' }]);\n    };\n\n    const removeEduField = index => {\n        const education = [...edu];\n        education.splice(index, 1);\n        setEdu(education);\n        setFormData({\n            ...formData,\n            education: education\n        });\n    };\n\n    const addSkillField = () => {\n        setSkill([...skill, '']);\n    };\n\n    const removeSkillField = index => {\n        let skills = [...skill];\n        skills.splice(index, 1);\n        setSkill(skills);\n        setFormData({\n            ...formData,\n            skill: skills\n        });\n    };\n\n    const skillChange = (index, event) => {\n        const skills = [...skill];\n        skills[index] = event.target.value;\n        setSkill(skills);\n        setFormData({\n            ...formData,\n            skill: skills\n        });\n    };\n\n    const checkChange = event => {\n        const skills = [...skill];\n        if (event.target.checked) {\n            skills.push(event.target.name);\n        } else {\n            const index = skill.indexOf(event.target.name);\n            skills.splice(index, 1);\n        }\n        setSkill(skills);\n        setFormData({\n            ...formData,\n            skill: skills\n        });\n    };\n\n    const educationChange = (index, event) => {\n        const education = [...edu];\n        education[index][event.target.name] = event.target.value;\n        setEdu(education);\n        setFormData({\n            ...formData,\n            education: education\n        });\n    };\n\n    const checkSkill = ['C', 'Python', 'Java'];\n\n    const onSubmit = e => {\n        e.preventDefault();\n        // console.log(formData);\n        register(formData);\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            {error && <MyAlert />}\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Register\n                </Typography>\n                <form onSubmit={onSubmit} className={classes.form} noValidate>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"role\">Role</InputLabel>\n                        <Select\n                            labelId=\"Role\"\n                            id=\"role\"\n                            value={formData.role}\n                            onChange={onChange}\n                            name=\"role\"\n                        >\n                            <MenuItem value={'Applicant'}>Applicant</MenuItem>\n                            <MenuItem value={'Recruiter'}>Recruiter</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\"\n                        value={formData.name}\n                        autoComplete=\"name\"\n                        onChange={onChange}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        value={formData.email}\n                        autoComplete=\"email\"\n                        onChange={onChange}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        value={formData.password}\n                        onChange={onChange}\n                        autoComplete=\"current-password\"\n                    />\n                    {formData.role === 'Applicant' && (\n                        <Typography component=\"h1\" variant=\"h6\">\n                            Education\n                        </Typography>\n                    )}\n                    {formData.role === 'Applicant' &&\n                        edu.map((e, index) => (\n                            <div key={index}>\n                                <TextField\n                                    name=\"institute\"\n                                    label=\"Institute\"\n                                    value={e.institute}\n                                    onChange={event => educationChange(index, event)}\n                                />\n                                <TextField\n                                    name=\"startYear\"\n                                    label=\"Start Year\"\n                                    value={e.startYear}\n                                    onChange={event => educationChange(index, event)}\n                                />\n                                <TextField\n                                    name=\"endYear\"\n                                    label=\"End Year\"\n                                    value={e.endYear}\n                                    onChange={event => educationChange(index, event)}\n                                />\n                                <IconButton\n                                    disabled={edu.length === 1}\n                                    onClick={() => removeEduField(index)}\n                                >\n                                    <RemoveIcon />\n                                </IconButton>\n                            </div>\n                        ))}\n                    {formData.role === 'Applicant' && (\n                        <IconButton onClick={addEduField}>\n                            <AddIcon />\n                        </IconButton>\n                    )}\n                    {formData.role === 'Applicant' && (\n                        <Typography component=\"h1\" variant=\"h6\">\n                            Skills\n                        </Typography>\n                    )}\n                    {formData.role === 'Applicant' &&\n                        checkSkill.map(e => (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={skill.includes(e)}\n                                        onChange={event => checkChange(event)}\n                                        name={e}\n                                    />\n                                }\n                                label={e}\n                            />\n                        ))}\n                    {formData.role === 'Applicant' &&\n                        skill.map((e, index) => (\n                            <div key={index}>\n                                <TextField\n                                    name=\"skill\"\n                                    label=\"Skill\"\n                                    value={e}\n                                    onChange={event => skillChange(index, event)}\n                                />\n                                <IconButton\n                                    disabled={skill.length === 1}\n                                    onClick={() => removeSkillField(index)}\n                                >\n                                    <RemoveIcon />\n                                </IconButton>\n                            </div>\n                        ))}\n                    {formData.role === 'Applicant' && (\n                        <IconButton onClick={addSkillField}>\n                            <AddIcon />\n                        </IconButton>\n                    )}\n                    {formData.role === 'Recruiter' && (\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"bio\"\n                            label=\"Bio\"\n                            name=\"bio\"\n                            value={formData.bio}\n                            autoComplete=\"bio\"\n                            onChange={onChange}\n                            autoFocus\n                        />\n                    )}\n                    {formData.role === 'Recruiter' && (\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            name=\"contact\"\n                            label=\"Contact\"\n                            type=\"number\"\n                            id=\"contact\"\n                            value={formData.contact}\n                            onChange={onChange}\n                        />\n                    )}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Register\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link to=\"/login\" variant=\"body2\">\n                                {'Already have an account? Login Now'}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n};\n\nexport default Register;\n","/home/shrey2809/MERN/frontend/src/components/Navbar.js",["81","82"],"import React from 'react';\nimport { Link, Redirect, Switch } from 'react-router-dom';\nimport { signout } from './LoginSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport PersonIcon from '@material-ui/icons/Person';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport LockIcon from '@material-ui/icons/Lock';\nimport WorkIcon from '@material-ui/icons/Work';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport GroupIcon from '@material-ui/icons/Group';\nimport DescriptionIcon from '@material-ui/icons/Description';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex'\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        })\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    menuButton: {\n        marginRight: 36\n    },\n    hide: {\n        display: 'none'\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap'\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1\n        }\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3)\n    }\n}));\n\nconst Navbar = ({ children }) => {\n    const loggedIn = useSelector(state => state.login.isAuthenticated);\n    const role = useSelector(state => state.login.role);\n\n    const dispatch = useDispatch();\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const onClick = e => {\n        e.preventDefault();\n        dispatch(signout());\n    };\n    // if (!loggedIn) return <Redirect to=\"/login\" />;\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    let links = [];\n\n    if (!loggedIn) {\n        links = [\n            { title: 'Login', to: '/login', icon: <LockOpenIcon /> },\n            { title: 'Register', to: '/register', icon: <PersonAddIcon /> }\n        ];\n    } else {\n        if (role === 'Applicant') {\n            links = [\n                { title: 'Jobs', to: '/dashboard', icon: <DashboardIcon /> },\n                { title: 'My Applications', to: '/', icon: <DescriptionIcon /> },\n                { title: 'Profile', to: '/profile', icon: <PersonIcon /> }\n            ];\n        } else if (role === 'Recruiter') {\n            links = [\n                { title: 'My Jobs', to: '/', icon: <WorkIcon /> },\n                { title: 'My Employees', to: '/', icon: <GroupIcon /> },\n                { title: 'Profile', to: '/profile', icon: <PersonIcon /> }\n            ];\n        }\n    }\n\n    let logoutRender;\n    if (loggedIn) {\n        logoutRender = (\n            <ListItem button onClick={onClick} key=\"Logout\" component={Link} to=\"/login\">\n                <ListItemIcon>\n                    <LockIcon />{' '}\n                </ListItemIcon>\n                <ListItemText primary=\"Logout\" />\n            </ListItem>\n        );\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open\n                        })}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        Jobz\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open\n                    })\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? (\n                            <ChevronRightIcon />\n                        ) : (\n                            <ChevronLeftIcon />\n                        )}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    {links.map(link => (\n                        <ListItem button key={link.title} component={Link} to={link.to}>\n                            <ListItemIcon>{link.icon}</ListItemIcon>\n                            <ListItemText primary={link.title} />\n                        </ListItem>\n                    ))}\n                    {logoutRender}\n                </List>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                {children}\n            </main>\n        </div>\n    );\n};\n\nexport default Navbar;\n","/home/shrey2809/MERN/frontend/src/components/LoginSlice.js",[],"/home/shrey2809/MERN/frontend/src/utils/apiCalls.js",["83"],"import axios from 'axios';\n\nexport default {\n    get(url, payload) {\n        if (payload)\n            return axios.get(url, {\n                params: {\n                    source_content_type: 'application/json',\n                    source: JSON.stringify(payload.query)\n                }\n            });\n        return axios.get(url);\n    },\n    post(url, payload = {}) {\n        return axios.post(url, payload.body);\n    },\n    put(url, payload = {}) {\n        return axios.put(url, payload.body);\n    },\n    patch(url, payload = {}) {\n        return axios.patch(url, payload.body);\n    },\n    delete(url) {\n        return axios.delete(url);\n    }\n};\n",["84","85"],"/home/shrey2809/MERN/frontend/src/components/MyAlert.js",[],"/home/shrey2809/MERN/frontend/src/components/Dashboard.js",["86","87","88","89","90","91","92"],"/home/shrey2809/MERN/frontend/src/components/Profile.js",["93","94","95","96","97","98"],"import { React, useState, useEffect } from 'react';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signin, signout, signerror, signnoerror } from './LoginSlice';\nimport api from '../utils/apiCalls';\nimport axios from 'axios';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport IconButton from '@material-ui/core/IconButton';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MyAlert from './MyAlert';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '100%'\n        }\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: '100%'\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}));\n\nconst Profile = () => {\n    const dispatch = useDispatch();\n\n    const loggedIn = useSelector(state => state.login.isAuthenticated);\n\n    const role = useSelector(state => state.login.role);\n    const error = useSelector(state => state.login.error);\n\n    const [loading, setLoading] = useState(false);\n    const [upd, setUpd] = useState(false);\n\n    const update = async formData => {\n        try {\n            const response = await api.patch('/api/users/update', {\n                body: formData\n            });\n            const result = response.data;\n            dispatch(signnoerror());\n            setUpd(!upd);\n        } catch (err) {\n            setUpd(!upd);\n            const message = err.response.data.errors[0].msg;\n            // dispatch(signout());\n            dispatch(signerror({ message }));\n            console.error(err);\n        }\n    };\n\n    const classes = useStyles();\n\n    const [formData, setFormData] = useState({\n        role: '',\n        email: '',\n        password: '',\n        name: '',\n        bio: '',\n        education: [],\n        skill: [],\n        contact: ''\n    });\n\n    const [edu, setEdu] = useState([{ institute: '', startYear: '', endYear: '' }]);\n    const [skill, setSkill] = useState(['']);\n\n    const getMe = async () => {\n        setLoading(true);\n        const res = await axios.get(`/api/users/`);\n        console.log(res);\n        const result = res.data.data.data;\n        console.log(result);\n        setFormData(result);\n        setEdu(result.education);\n        setSkill(result.skill);\n        setLoading(false);\n    };\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!loggedIn) history.push('/login');\n        else getMe();\n    }, [loggedIn, upd]);\n\n    // if (!loggedIn) return <Redirect to=\"/login\" />;\n\n    const onChange = e => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const addEduField = () => {\n        setEdu([...edu, { institute: '', startYear: '', endYear: '' }]);\n    };\n\n    const removeEduField = index => {\n        const education = [...edu];\n        education.splice(index, 1);\n        setEdu(education);\n        setFormData({\n            ...formData,\n            education: education\n        });\n    };\n\n    const addSkillField = () => {\n        setSkill([...skill, '']);\n    };\n\n    const removeSkillField = index => {\n        let skills = [...skill];\n        skills.splice(index, 1);\n        setSkill(skills);\n        setFormData({\n            ...formData,\n            skill: skills\n        });\n    };\n\n    const skillChange = (index, event) => {\n        const skills = [...skill];\n        skills[index] = event.target.value;\n        setSkill(skills);\n        setFormData({\n            ...formData,\n            skill: skills\n        });\n    };\n\n    const checkChange = event => {\n        const skills = [...skill];\n        if (event.target.checked) {\n            skills.push(event.target.name);\n        } else {\n            const index = skill.indexOf(event.target.name);\n            skills.splice(index, 1);\n        }\n        setSkill(skills);\n        setFormData({\n            ...formData,\n            skill: skills\n        });\n    };\n\n    const educationChange = (index, event) => {\n        const education = [...edu];\n        education[index][event.target.name] = event.target.value;\n        setEdu(education);\n        setFormData({\n            ...formData,\n            education: education\n        });\n    };\n\n    const checkSkill = ['C', 'Python', 'Java'];\n\n    const onSubmit = e => {\n        e.preventDefault();\n        console.log(formData);\n        update(formData);\n    };\n    if (loading) {\n        return <h1>loading</h1>;\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            {error && <MyAlert />}\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <PersonIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Profile\n                </Typography>\n                <form onSubmit={onSubmit} className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\"\n                        value={formData.name}\n                        autoComplete=\"name\"\n                        onChange={onChange}\n                        autoFocus\n                    />\n                    <TextField\n                        disabled\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        value={formData.email}\n                        autoComplete=\"email\"\n                        onChange={onChange}\n                        autoFocus\n                    />\n                    <TextField\n                        disabled\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        value={formData.password}\n                        onChange={onChange}\n                        autoComplete=\"current-password\"\n                    />\n                    {role === 'Applicant' && (\n                        <Typography component=\"h1\" variant=\"h6\">\n                            Education\n                        </Typography>\n                    )}\n                    {role === 'Applicant' &&\n                        edu.map((e, index) => (\n                            <div key={index}>\n                                <TextField\n                                    name=\"institute\"\n                                    label=\"Institute\"\n                                    value={e.institute}\n                                    onChange={event => educationChange(index, event)}\n                                />\n                                <TextField\n                                    name=\"startYear\"\n                                    label=\"Start Year\"\n                                    value={e.startYear}\n                                    onChange={event => educationChange(index, event)}\n                                />\n                                <TextField\n                                    name=\"endYear\"\n                                    label=\"End Year\"\n                                    value={e.endYear}\n                                    onChange={event => educationChange(index, event)}\n                                />\n                                <IconButton\n                                    disabled={edu.length === 1}\n                                    onClick={() => removeEduField(index)}\n                                >\n                                    <RemoveIcon />\n                                </IconButton>\n                            </div>\n                        ))}\n                    {role === 'Applicant' && (\n                        <IconButton onClick={addEduField}>\n                            <AddIcon />\n                        </IconButton>\n                    )}\n                    {role === 'Applicant' && (\n                        <Typography component=\"h1\" variant=\"h6\">\n                            Skills\n                        </Typography>\n                    )}\n                    {role === 'Applicant' &&\n                        checkSkill.map(e => (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={skill.includes(e)}\n                                        onChange={event => checkChange(event)}\n                                        name={e}\n                                    />\n                                }\n                                label={e}\n                            />\n                        ))}\n                    {role === 'Applicant' &&\n                        skill.map((e, index) => (\n                            <div key={index}>\n                                <TextField\n                                    name=\"skill\"\n                                    label=\"Skill\"\n                                    value={e}\n                                    onChange={event => skillChange(index, event)}\n                                />\n                                <IconButton\n                                    disabled={skill.length === 1}\n                                    onClick={() => removeSkillField(index)}\n                                >\n                                    <RemoveIcon />\n                                </IconButton>\n                            </div>\n                        ))}\n                    {role === 'Applicant' && (\n                        <IconButton onClick={addSkillField}>\n                            <AddIcon />\n                        </IconButton>\n                    )}\n                    {role === 'Recruiter' && (\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"bio\"\n                            label=\"Bio\"\n                            name=\"bio\"\n                            value={formData.bio}\n                            autoComplete=\"bio\"\n                            onChange={onChange}\n                            autoFocus\n                        />\n                    )}\n                    {role === 'Recruiter' && (\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            name=\"contact\"\n                            label=\"Contact\"\n                            type=\"number\"\n                            id=\"contact\"\n                            value={formData.contact}\n                            onChange={onChange}\n                        />\n                    )}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Update\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n};\n\nexport default Profile;\n",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":22,"column":29,"nodeType":"105","endLine":22,"endColumn":34},{"ruleId":"103","severity":1,"message":"104","line":25,"column":56,"nodeType":"105","endLine":25,"endColumn":61},{"ruleId":"103","severity":1,"message":"104","line":26,"column":52,"nodeType":"105","endLine":26,"endColumn":57},{"ruleId":"103","severity":1,"message":"104","line":27,"column":55,"nodeType":"105","endLine":27,"endColumn":60},{"ruleId":"103","severity":1,"message":"104","line":28,"column":54,"nodeType":"105","endLine":28,"endColumn":59},{"ruleId":"106","severity":1,"message":"107","line":1,"column":26,"nodeType":"108","messageId":"109","endLine":1,"endColumn":46},{"ruleId":"99","replacedBy":"110"},{"ruleId":"101","replacedBy":"111"},{"ruleId":"106","severity":1,"message":"112","line":42,"column":11,"nodeType":"108","messageId":"109","endLine":42,"endColumn":18},{"ruleId":"106","severity":1,"message":"113","line":67,"column":11,"nodeType":"108","messageId":"109","endLine":67,"endColumn":15},{"ruleId":"106","severity":1,"message":"113","line":92,"column":11,"nodeType":"108","messageId":"109","endLine":92,"endColumn":15},{"ruleId":"106","severity":1,"message":"114","line":2,"column":16,"nodeType":"108","messageId":"109","endLine":2,"endColumn":24},{"ruleId":"106","severity":1,"message":"115","line":2,"column":26,"nodeType":"108","messageId":"109","endLine":2,"endColumn":32},{"ruleId":"116","severity":1,"message":"117","line":3,"column":1,"nodeType":"118","endLine":26,"endColumn":3},{"ruleId":"99","replacedBy":"119"},{"ruleId":"101","replacedBy":"120"},{"ruleId":"106","severity":1,"message":"121","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":14},{"ruleId":"106","severity":1,"message":"114","line":3,"column":16,"nodeType":"108","messageId":"109","endLine":3,"endColumn":24},{"ruleId":"106","severity":1,"message":"122","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":21},{"ruleId":"106","severity":1,"message":"123","line":7,"column":8,"nodeType":"108","messageId":"109","endLine":7,"endColumn":17},{"ruleId":"106","severity":1,"message":"124","line":12,"column":8,"nodeType":"108","messageId":"109","endLine":12,"endColumn":13},{"ruleId":"106","severity":1,"message":"125","line":133,"column":11,"nodeType":"108","messageId":"109","endLine":133,"endColumn":18},{"ruleId":"126","severity":1,"message":"127","line":164,"column":8,"nodeType":"128","endLine":164,"endColumn":18,"suggestions":"129"},{"ruleId":"106","severity":1,"message":"121","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":14},{"ruleId":"106","severity":1,"message":"114","line":2,"column":16,"nodeType":"108","messageId":"109","endLine":2,"endColumn":24},{"ruleId":"106","severity":1,"message":"130","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":16},{"ruleId":"106","severity":1,"message":"131","line":4,"column":18,"nodeType":"108","messageId":"109","endLine":4,"endColumn":25},{"ruleId":"106","severity":1,"message":"132","line":69,"column":19,"nodeType":"108","messageId":"109","endLine":69,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":113,"column":8,"nodeType":"128","endLine":113,"endColumn":23,"suggestions":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'getDefaultMiddleware' is defined but never used.","Identifier","unusedVar",["134"],["135"],"'history' is assigned a value but never used.","'role' is assigned a value but never used.","'Redirect' is defined but never used.","'Switch' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["134"],["135"],"'Link' is defined but never used.","'useDispatch' is defined but never used.","'TextField' is defined but never used.","'Paper' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["136"],"'signin' is defined but never used.","'signout' is defined but never used.","'result' is assigned a value but never used.",["137"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [history, loggedIn]",{"range":"142","text":"143"},"Update the dependencies array to be: [history, loggedIn, upd]",{"range":"144","text":"145"},[4259,4269],"[history, loggedIn]",[3396,3411],"[history, loggedIn, upd]"]