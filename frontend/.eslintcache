[{"/home/shrey2809/MERN/frontend/src/index.js":"1","/home/shrey2809/MERN/frontend/src/app/App.js":"2","/home/shrey2809/MERN/frontend/src/app/store.js":"3","/home/shrey2809/MERN/frontend/src/components/Main.js":"4","/home/shrey2809/MERN/frontend/src/components/Home.js":"5","/home/shrey2809/MERN/frontend/src/app/rootReducer.js":"6","/home/shrey2809/MERN/frontend/src/components/Login.js":"7","/home/shrey2809/MERN/frontend/src/components/Register.js":"8","/home/shrey2809/MERN/frontend/src/components/Navbar.js":"9","/home/shrey2809/MERN/frontend/src/components/LoginSlice.js":"10","/home/shrey2809/MERN/frontend/src/utils/apiCalls.js":"11","/home/shrey2809/MERN/frontend/src/components/MyAlert.js":"12","/home/shrey2809/MERN/frontend/src/components/Dashboard.js":"13"},{"size":211,"mtime":1610629717377,"results":"14","hashOfConfig":"15"},{"size":1388,"mtime":1610769802037,"results":"16","hashOfConfig":"15"},{"size":307,"mtime":1610727530836,"results":"17","hashOfConfig":"15"},{"size":152,"mtime":1610630234019,"results":"18","hashOfConfig":"15"},{"size":162,"mtime":1610630228151,"results":"19","hashOfConfig":"15"},{"size":189,"mtime":1610727511093,"results":"20","hashOfConfig":"15"},{"size":4827,"mtime":1610730479785,"results":"21","hashOfConfig":"15"},{"size":12755,"mtime":1610791089267,"results":"22","hashOfConfig":"15"},{"size":7327,"mtime":1610730164849,"results":"23","hashOfConfig":"15"},{"size":1151,"mtime":1610770890133,"results":"24","hashOfConfig":"15"},{"size":653,"mtime":1610727681436,"results":"25","hashOfConfig":"15"},{"size":651,"mtime":1610730012384,"results":"26","hashOfConfig":"15"},{"size":2088,"mtime":1610730233556,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"6tyclk",{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"30"},"/home/shrey2809/MERN/frontend/src/index.js",[],["62","63"],"/home/shrey2809/MERN/frontend/src/app/App.js",["64","65","66","67","68","69"],"import { Provider as StoreProvider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Profile from '../components/Home';\nimport Main from '../components/Main';\nimport Navbar from '../components/Navbar';\nimport Login from '../components/Login';\nimport Register from '../components/Register';\nimport Dashboard from '../components/Dashboard';\n\nimport './App.css';\n\nimport store from './store';\n\nfunction App() {\n    return (\n        <StoreProvider store={store}>\n            <Router>\n                <Navbar>\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            exact\n                            component={() => <Redirect to=\"/login\"></Redirect>}\n                        />\n                        <Route exact path=\"/dashboard\" exact component={Dashboard} />\n                        <Route exact path=\"/login\" exact component={Login} />\n                        <Route exact path=\"/register\" exact component={Register} />\n                        {/* <Route exact path=\"/login\" exact component={Login} />\n                        <Route exact path=\"/navbar\" exact component={Navbar} /> */}\n                    </Switch>\n                </Navbar>\n            </Router>\n        </StoreProvider>\n    );\n}\n\nexport default App;\n","/home/shrey2809/MERN/frontend/src/app/store.js",["70"],"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import loginReducer from '../components/LoginSlice';\n\nimport rootReducer from './rootReducer';\nconst store = configureStore({\n    reducer: rootReducer,\n    devTools: process.env.NODE_ENV !== 'production'\n});\n\nexport default store;\n","/home/shrey2809/MERN/frontend/src/components/Main.js",[],"/home/shrey2809/MERN/frontend/src/components/Home.js",[],"/home/shrey2809/MERN/frontend/src/app/rootReducer.js",[],"/home/shrey2809/MERN/frontend/src/components/Login.js",["71","72"],"import { React, useState } from 'react';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { login } from './LoginSlice';\nimport { signin, signout, signerror } from './LoginSlice';\nimport api from '../utils/apiCalls';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport MyAlert from './MyAlert';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}));\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const login = async (email, password) => {\n        try {\n            const response = await api.post('/api/users/login', {\n                body: { email, password }\n            });\n            const result = response.data;\n            dispatch(signin({ token: result.token, role: result.role }));\n        } catch (err) {\n            const message = err.response.data.errors[0].msg;\n            dispatch(signout());\n            dispatch(signerror({ message }));\n            console.error(err);\n        }\n    };\n\n    const classes = useStyles();\n\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n\n    const loggedIn = useSelector(state => state.login.isAuthenticated);\n\n    const role = useSelector(state => state.login.role);\n    const error = useSelector(state => state.login.error);\n\n    if (loggedIn) return <Redirect to=\"/dashboard\" />;\n\n    const onChange = e => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const onSubmit = e => {\n        e.preventDefault();\n        login(formData.email, formData.password);\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            {error && <MyAlert />}\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Log in\n                </Typography>\n                <form onSubmit={onSubmit} className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        value={formData.email}\n                        autoComplete=\"email\"\n                        onChange={onChange}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        value={formData.password}\n                        onChange={onChange}\n                        autoComplete=\"current-password\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Log In\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link to=\"/register\" variant=\"body2\">\n                                {\"Don't have an account? Register Now\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            {/* {loggedIn && <Redirect to=\"/dashboard\"></Redirect>} */}\n        </Container>\n    );\n};\n\nexport default Login;\n","/home/shrey2809/MERN/frontend/src/components/Register.js",["73"],"/home/shrey2809/MERN/frontend/src/components/Navbar.js",["74","75"],"import React from 'react';\nimport { Link, Redirect, Switch } from 'react-router-dom';\nimport { signout } from './LoginSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport PersonIcon from '@material-ui/icons/Person';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport LockIcon from '@material-ui/icons/Lock';\nimport WorkIcon from '@material-ui/icons/Work';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport GroupIcon from '@material-ui/icons/Group';\nimport DescriptionIcon from '@material-ui/icons/Description';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex'\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        })\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    menuButton: {\n        marginRight: 36\n    },\n    hide: {\n        display: 'none'\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap'\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1\n        }\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3)\n    }\n}));\n\nconst Navbar = ({ children }) => {\n    const loggedIn = useSelector(state => state.login.isAuthenticated);\n    const role = useSelector(state => state.login.role);\n\n    const dispatch = useDispatch();\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const onClick = e => {\n        e.preventDefault();\n        dispatch(signout());\n    };\n    // if (!loggedIn) return <Redirect to=\"/login\" />;\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    let links = [];\n\n    if (!loggedIn) {\n        links = [\n            { title: 'Login', to: '/login', icon: <LockOpenIcon /> },\n            { title: 'Register', to: '/register', icon: <PersonAddIcon /> }\n        ];\n    } else {\n        if (role === 'Applicant') {\n            links = [\n                { title: 'Jobs', to: '/', icon: <DashboardIcon /> },\n                { title: 'My Applications', to: '/', icon: <DescriptionIcon /> },\n                { title: 'Profile', to: '/', icon: <PersonIcon /> }\n            ];\n        } else if (role === 'Recruiter') {\n            links = [\n                { title: 'My Jobs', to: '/', icon: <WorkIcon /> },\n                { title: 'My Employees', to: '/', icon: <GroupIcon /> },\n                { title: 'Profile', to: '/', icon: <PersonIcon /> }\n            ];\n        }\n    }\n\n    let logoutRender;\n    if (loggedIn) {\n        logoutRender = (\n            <ListItem button onClick={onClick} key=\"Logout\" component={Link} to=\"/login\">\n                <ListItemIcon>\n                    <LockIcon />{' '}\n                </ListItemIcon>\n                <ListItemText primary=\"Logout\" />\n            </ListItem>\n        );\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open\n                        })}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        Jobz\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open\n                    })\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? (\n                            <ChevronRightIcon />\n                        ) : (\n                            <ChevronLeftIcon />\n                        )}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    {links.map(link => (\n                        <ListItem button key={link.title} component={Link} to={link.to}>\n                            <ListItemIcon>{link.icon}</ListItemIcon>\n                            <ListItemText primary={link.title} />\n                        </ListItem>\n                    ))}\n                    {logoutRender}\n                </List>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                {children}\n            </main>\n        </div>\n    );\n};\n\nexport default Navbar;\n","/home/shrey2809/MERN/frontend/src/components/LoginSlice.js",[],"/home/shrey2809/MERN/frontend/src/utils/apiCalls.js",["76"],"import axios from 'axios';\n\nexport default {\n    get(url, payload) {\n        if (payload)\n            return axios.get(url, {\n                params: {\n                    source_content_type: 'application/json',\n                    source: JSON.stringify(payload.query)\n                }\n            });\n        return axios.get(url);\n    },\n    post(url, payload = {}) {\n        return axios.post(url, payload.body);\n    },\n    put(url, payload = {}) {\n        return axios.put(url, payload.body);\n    },\n    patch(url, payload = {}) {\n        return axios.patch(url, payload.body);\n    },\n    delete(url) {\n        return axios.delete(url);\n    }\n};\n",["77","78"],"/home/shrey2809/MERN/frontend/src/components/MyAlert.js",[],"/home/shrey2809/MERN/frontend/src/components/Dashboard.js",["79","80","81","82","83","84","85"],"import { React, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport api from '../utils/apiCalls';\n\nimport Button from '@material-ui/core/Button';\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst columns = [\n    {\n        field: 'title',\n        headerName: 'Title'\n    },\n    {\n        field: 'recuiter',\n        headerName: 'Recruiter Name'\n    },\n    {\n        field: 'salary',\n        headerName: 'Salary'\n    },\n    {\n        field: 'duration',\n        headerName: 'Duration'\n    },\n    {\n        field: 'date',\n        headerName: 'Deadline to Apply'\n    },\n    {\n        field: 'avgRating',\n        headerName: 'rating'\n    },\n    {\n        renderCell: params => (\n            <strong>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    style={{ marginLeft: 16 }}\n                >\n                    {params.status}\n                </Button>\n            </strong>\n        )\n    }\n];\n\nconst Dashboard = () => {\n    const loggedIn = useSelector(state => state.login.isAuthenticated);\n    const [jobs, setJobs] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const getAllJobs = async () => {\n        setLoading(true);\n        const res = await axios.get(`/api/applicant`);\n        console.log(res);\n        setJobs(res.data.data.data);\n        setLoading(false);\n    };\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!loggedIn) history.push('/login');\n        else getAllJobs();\n    }, [loggedIn]);\n\n    // if (!loggedIn) return <Redirect to=\"/login\" />;\n\n    console.log(jobs);\n    if (loading) {\n        return <h1>loading</h1>;\n    }\n    // const jobs = [];\n    return (\n        <div style={{ height: 300, width: '100%' }}>\n            {/* <DataGrid rows={jobs ? jobs : []} columns={columns} /> */}\n            {JSON.stringify(jobs)}\n        </div>\n    );\n};\n\nexport default Dashboard;\n",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":15},{"ruleId":"90","severity":1,"message":"94","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":12},{"ruleId":"95","severity":1,"message":"96","line":23,"column":29,"nodeType":"97","endLine":23,"endColumn":34},{"ruleId":"95","severity":1,"message":"96","line":26,"column":56,"nodeType":"97","endLine":26,"endColumn":61},{"ruleId":"95","severity":1,"message":"96","line":27,"column":52,"nodeType":"97","endLine":27,"endColumn":57},{"ruleId":"95","severity":1,"message":"96","line":28,"column":55,"nodeType":"97","endLine":28,"endColumn":60},{"ruleId":"90","severity":1,"message":"98","line":1,"column":26,"nodeType":"92","messageId":"93","endLine":1,"endColumn":46},{"ruleId":"90","severity":1,"message":"99","line":42,"column":11,"nodeType":"92","messageId":"93","endLine":42,"endColumn":18},{"ruleId":"90","severity":1,"message":"100","line":67,"column":11,"nodeType":"92","messageId":"93","endLine":67,"endColumn":15},{"ruleId":"90","severity":1,"message":"100","line":92,"column":11,"nodeType":"92","messageId":"93","endLine":92,"endColumn":15},{"ruleId":"90","severity":1,"message":"101","line":2,"column":16,"nodeType":"92","messageId":"93","endLine":2,"endColumn":24},{"ruleId":"90","severity":1,"message":"102","line":2,"column":26,"nodeType":"92","messageId":"93","endLine":2,"endColumn":32},{"ruleId":"103","severity":1,"message":"104","line":3,"column":1,"nodeType":"105","endLine":26,"endColumn":3},{"ruleId":"86","replacedBy":"106"},{"ruleId":"88","replacedBy":"107"},{"ruleId":"90","severity":1,"message":"108","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":14},{"ruleId":"90","severity":1,"message":"101","line":3,"column":16,"nodeType":"92","messageId":"93","endLine":3,"endColumn":24},{"ruleId":"90","severity":1,"message":"109","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":21},{"ruleId":"90","severity":1,"message":"110","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":11},{"ruleId":"90","severity":1,"message":"111","line":8,"column":10,"nodeType":"92","messageId":"93","endLine":8,"endColumn":18},{"ruleId":"90","severity":1,"message":"112","line":10,"column":7,"nodeType":"92","messageId":"93","endLine":10,"endColumn":14},{"ruleId":"113","severity":1,"message":"114","line":68,"column":8,"nodeType":"115","endLine":68,"endColumn":18,"suggestions":"116"},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'Main' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'getDefaultMiddleware' is defined but never used.","'history' is assigned a value but never used.","'role' is assigned a value but never used.","'Redirect' is defined but never used.","'Switch' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["117"],["118"],"'Link' is defined but never used.","'useDispatch' is defined but never used.","'api' is defined but never used.","'DataGrid' is defined but never used.","'columns' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["119"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},"Update the dependencies array to be: [history, loggedIn]",{"range":"122","text":"123"},[1685,1695],"[history, loggedIn]"]